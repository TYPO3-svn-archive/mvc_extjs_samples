Index: t3lib/class.t3lib_loadmodules.php
===================================================================
--- t3lib/class.t3lib_loadmodules.php	(revision 5734)
+++ t3lib/class.t3lib_loadmodules.php	(working copy)
@@ -433,7 +431,11 @@
 
 					// Default script setup
 				if ($MCONF['script']==='_DISPATCH')	{
-					$modconf['script'] = 'mod.php?M='.rawurlencode($name);
+					if ($MCONF['extbase']) {
+						$modconf['script'] = 'mod.php?M=TX_'.rawurlencode($name);
+					} else {
+						$modconf['script'] = 'mod.php?M='.rawurlencode($name);	
+					}
 				} elseif ($MCONF['script'] && file_exists($path.'/'.$MCONF['script']))	{
 					$modconf['script'] = $this->getRelativePath(PATH_typo3,$fullpath.'/'.$MCONF['script']);
 				} else {
Index: typo3/mod.php
===================================================================
--- typo3/mod.php	(revision 5734)
+++ typo3/mod.php	(working copy)
@@ -42,13 +42,18 @@
 
 	// Find module path:
 $temp_M = (string)t3lib_div::_GET('M');
-if ($temp_path = $TBE_MODULES['_PATHS'][$temp_M])	{
-	$MCONF['_'] = 'mod.php?M='.rawurlencode($temp_M);
-	require($temp_path.'conf.php');
-	$BACK_PATH='';
-	require($temp_path.'index.php');
+if (substr($temp_M, 0, 3) == 'TX_') {
+	$dispatcher = t3lib_div::makeInstance('Tx_MvcExtjsSamples_BackendDispatcher');
+	$dispatcher->callModule(substr($temp_M, 3));
 } else {
-	die('Value "'.htmlspecialchars($temp_M).'" for "M" was not found as a module');
+	if ($temp_path = $TBE_MODULES['_PATHS'][$temp_M])	{
+		$MCONF['_'] = 'mod.php?M='.rawurlencode($temp_M);
+		require($temp_path.'conf.php');
+		$BACK_PATH='';
+		require($temp_path.'index.php');
+	} else {
+		die('Value "'.htmlspecialchars($temp_M).'" for "M" was not found as a module');
+	}
 }
 
 ?>
\ No newline at end of file